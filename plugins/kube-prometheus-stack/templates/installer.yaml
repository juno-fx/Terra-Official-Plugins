apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Release.Name }}-prometheus
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
    - post-delete-finalizer.argocd.argoproj.io
    - post-delete-finalizer.argocd.argoproj.io/cleanup
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: prometheus
  sources:
    - repoURL: https://github.com/prometheus-community/helm-charts.git
      path: ./charts/kube-prometheus-stack/
      targetRevision: main
      helm:
        releaseName: prometheus
        values: |
          serviceMonitorSelectorNilUsesHelmValues: false
          additionalScrapeConfigs:
            - job_name: gpu-metrics
              scrape_interval: 1s
              metrics_path: /metrics
              scheme: http
              kubernetes_sd_configs:
                - role: endpoints
                  namespaces:
                    names:
                      - gpu-operator
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_node_name]
                  action: replace
                  target_label: kubernetes_node
          grafana:
            enabled: true
            forceDeployDashboards: true
            grafana.ini:
              security:
                allow_embedding: true
              auth.anonymous:
                enabled: true
                orgName: {{ .Release.Name }}-grafana
                orgRole: Admin
              server:
                domain: {{ .Values.host }}
                root_url: http://{{ .Values.host }}{{.Values.path}}
                serve_from_sub_path: true
            adminUser: {{ .Values.username }}
            adminPassword: {{ .Values.password }}
            ingress:
              enabled: true
              annotations:
                nginx.ingress.kubernetes.io/auth-url: "http://genesis.{{ .Release.Namespace }}.svc.cluster.local:3000/api/auth-service/{{ .Release.Name }}/"
                nginx.ingress.kubernetes.io/auth-signin: /unauthorized/
              path: {{ .Values.path }}
              hosts:
                - {{ .Values.host }}
          alertmanager:
            enabled: false
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true

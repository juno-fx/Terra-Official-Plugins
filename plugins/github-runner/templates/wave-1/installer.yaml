apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-installer
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      nodeSelector:
        {{ eq .Values.architecture x64 | ternary "kubernetes.io/arch: amd64" "" }}
        {{ eq .Values.architecture arm64 | ternary "kubernetes.io/arch: arm64" "" }}
      containers:
        - name: installer
          image: ubuntu:latest
          env:
            - name: INSTALL
              value: "true"
            - name: DESTINATION
              value: "{{ .Values.install_volume.container_path }}{{ .Values.destination }}"
            - name: VERSION
              value: "{{ .Values.version }}"
            - name: ARCHITECTURE
              value: "{{ .Values.architecture }}"
            - name: NAME
              value: "{{ .Values.name }}"
            - name: URL
              value: "{{ .Values.url }}"
            - name: TOKEN
              value: "{{ .Values.token }}"
          command: [ "/terra/bootstrap.sh" ]
          volumeMounts:
            - name: installer
              mountPath: /terra/bootstrap.sh
              subPath: bootstrap.sh
            - name: installer
              mountPath: /terra/scripts.base64
              subPath: packaged_scripts.base64
            - name: mount
              mountPath: {{ .Values.install_volume.container_path }}
              {{- if .Values.install_volume.sub_path }}
              subPath: {{ .Values.install_volume.sub_path }}
              {{- end }}
      volumes:
        - name: mount
          persistentVolumeClaim:
            claimName: {{ .Values.install_volume.name }}
        - name: installer
          configMap:
            name: {{ .Release.Name }}-scripts-configmap
            defaultMode: 0500


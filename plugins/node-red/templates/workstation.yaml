apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}"

spec:
  replicas: 1

  selector:
    matchLabels:
      juno-innovations.com/dashboard: "{{ .Release.Name }}"

  template:
    metadata:
      labels:
        juno-innovations.com/dashboard: "{{ .Release.Name }}"
      annotations:
        # This will block the cluster autoscaler from evicting this pod in the case
        # it can move to a cheaper instance. This does come at a cost, but ideally
        # this should stop from a workstation getting ripped out from under existing users.
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"

    spec:
      automountServiceAccountToken: false
      containers:
        - name: "{{ .Release.Name }}"
          imagePullPolicy: IfNotPresent
          image: "{{ .Values.registry }}/{{ .Values.repo }}:{{ .Values.tag }}"
          resources:
            requests:
              memory: "{{ .Values.memory }}"
              cpu: "{{ .Values.cpu }}"
            # gotmpl's or is a function taking 2 args - this is "X or Y or Z" translated to python
            {{- if or .Values.memoryLimit .Values.cpuLimit }}
            limits:
            {{- if .Values.cpuLimit }}
              cpu: "{{ .Values.cpuLimit }}"
            {{- end }}
            {{- if .Values.memoryLimit }}
              memory: "{{ .Values.memoryLimit }}"
            {{- end }}
            {{- end }}
          startupProbe:
            httpGet:
              path: "/polaris/{{ .Values.prefix }}/"
              port: 1880
            initialDelaySeconds: 2 # helios boots very fast
            failureThreshold: 60  # start up totals 2 * 60 = 2 mins
            periodSeconds: 2
          livenessProbe:
            httpGet:
              path: "/polaris/{{ .Values.prefix }}/"
              port: 1880
            failureThreshold: 24
            periodSeconds: 5
          ports:
            - containerPort: 1880
              name: viewer
          env:
            - name: PREFIX
              value: "/polaris/{{ .Values.prefix }}/"
            {{- range .Values.env }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{- end }}
          volumeMounts:
            - name: settings
              mountPath: /data/settings.js
              subPath: settings.js
            {{- if .Values.volumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.volumeMounts }}
        {{- toYaml .Values.volumes | nindent 8 }}
        {{- end }}
        - name: settings
          configMap:
            name: node-red-settings
